name: Deploy Backend

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  CONTAINER_NAME: c_backend

jobs:
  build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set Image Name to Lowercase
        run: echo "IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Checkout
        # V3 ->  node v16
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and tag and push Docker image
        uses: docker/build-push-action@v3
        with:
          # The files that need to undergo the build process
          context: ./server
          # path of the docker file used for building
          file: ./server/Dockerfile
          # Build automatically pushed to the registry
          push: true
          # arguments that need to be passed to the Dockerfile
          # build-args: |
          #   NODE_ENV=production
          # setting the docker tags REGISTRY/[OWNER/REPO=IMAGE_NAME]:Version
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  pull-run:
    name: Pull and Run Docker Image on Vultr
    runs-on: ubuntu-latest
    # wait for the previous step
    needs:
      - build-push
    steps:
      # SSH HOST, USERNAME,KEY saved in Github secrets
      - name: SSH Command performed by walle
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "pull the image"

            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

            echo "stop the running container"

            docker stop ${{ CONTAINER_NAME }}

            echo "remove the container"

            docker rm ${{ CONTAINER_NAME }}

            echo "run the container"

            # docker container port 5000
            # Vultr server port 80
            docker run -d --name ${{ CONTAINER_NAME }} --network pushtosite-network -p 80:5000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

            echo exit
            exit
